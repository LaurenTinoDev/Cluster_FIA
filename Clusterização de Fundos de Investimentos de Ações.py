# -*- coding: utf-8 -*-
"""Programa_pedro_Jessé-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GtMVxNkuz1w7AJftrhtQz2XPjxt7arKv
"""

# Importando os pacotes essenciais
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt



!jt -t oceans16 -f fira -fs 12 -tfs 14

# importando os dados
df_planilha_fundos = pd.read_excel('planilha_fundos.xlsx', sheet_name = 'Planilha1')

df_planilha_fundos

# Calcula a correlação entre as variáveis
df_planilha_fundos.corr()

df_planilha_fundos.describe()

df_planilha_fundos = df_planilha_fundos.dropna()

df_planilha_fundos

planilha_fundos_matriz = df_planilha_fundos.values

planilha_fundos_matriz = planilha_fundos_matriz[:, 1:]

planilha_fundos_matriz.shape

st = StandardScaler()
planilha_fundos_matriz_padronizada = st.fit_transform(planilha_fundos_matriz)
planilha_fundos_matriz_padronizada

# Observando a curva de Elbow
l=[]
for k in range(1, 20):
    km = KMeans(n_clusters=k)
    km.fit(planilha_fundos_matriz_padronizada)
    l.append(km.inertia_)

plt.figure(figsize=[15,6])
plt.title("Curva de Elbow", fontsize = 20, fontweight = 'bold')
plt.xlabel("Número de clusters", fontsize = 14, fontweight = 'bold')
plt.ylabel("WCSS (inertia)", fontsize = 14, fontweight = 'bold')
plt.plot(range(1, 1+len(l)), l, c = 'black', lw = 2)
plt.scatter(range(1, 1+len(l)), l, c = 'black', lw = 2)
plt.xticks(range(1,1+len(l)))
plt.grid()
plt.show()

# gerando os clusters de acordo com a curva de Elbow
km = KMeans(n_clusters = 4)

km.fit(planilha_fundos_matriz_padronizada)

df_planilha_fundos['km3'] = km.predict(planilha_fundos_matriz_padronizada)
df_planilha_fundos.km3.unique()

df_planilha_fundos

lista_dados = []
for dado in df_planilha_fundos:
    lista_dados.append(dado)

print(lista_dados)

# Separando os fundos por cluster
numero_de_clusters=4  # informe o número de clusters

for cluster in range(numero_de_clusters):
    print("Cluster:", cluster)
    print(df_planilha_fundos.loc[df_planilha_fundos.km3 == cluster]['FUNDOS'])
    print("____________________________________________________________________________________________________________________")
print("Análise exploratória por cluster:")

for dimensao in lista_dados: #df_dados2.groupby('km3').describe():
    if dimensao !='FUNDOS' and dimensao!= 'km3':
        print(dimensao+':')
        print(df_planilha_fundos.groupby('km3').describe()[dimensao])
        print("_______________________________________________________________________________________________________")

for dimensao in lista_dados: #df_dados2.groupby('km3').describe():
    if dimensao !='FUNDOS' and dimensao!= 'km3':
        print(dimensao+':')
        print(df_planilha_fundos.groupby('km3').describe()[dimensao])
        print("__________")







